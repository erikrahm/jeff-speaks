{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CharacterContainer;\nconst CharacterName = styled.h4``;\n_c2 = CharacterName;\n\nconst CharacterBuilder = ({\n  character\n}) => {\n  _s();\n\n  const {\n    state\n  } = useContext(AppContext);\n\n  const getResponses = dID => state.responses.filter(res => res.parent === dID);\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(dialogue => dialogue.character === character.name);\n    return retrieved.map(char => ({ ...char,\n      responses: getResponses(char.name)\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n      children: character.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), getDialogue().map(dialogue => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", dialogue.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c3 = CharacterBuilder;\nexport default CharacterBuilder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CharacterContainer\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx"],"names":["React","useContext","styled","AppContext","CharacterContainer","div","CharacterName","h4","CharacterBuilder","character","state","getResponses","dID","responses","filter","res","parent","getDialogue","retrieved","dialogue","name","map","char","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,kB;AAQN,MAAME,aAAa,GAAGJ,MAAM,CAACK,EAAG,EAAhC;MAAMD,a;;AAMN,MAAME,gBAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAYT,UAAU,CAACE,UAAD,CAA5B;;AAEA,QAAMQ,YAAY,GAAIC,GAAD,IACnBF,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAwBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAeJ,GAA/C,CADF;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAGR,KAAK,CAACS,QAAN,CAAeL,MAAf,CACfK,QAAD,IAAcA,QAAQ,CAACV,SAAT,KAAuBA,SAAS,CAACW,IAD/B,CAAlB;AAGA,WAAOF,SAAS,CAACG,GAAV,CAAeC,IAAD,KAAW,EAC9B,GAAGA,IAD2B;AAE9BT,MAAAA,SAAS,EAAEF,YAAY,CAACW,IAAI,CAACF,IAAN;AAFO,KAAX,CAAd,CAAP;AAID,GARD;;AAUA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,aAAD;AAAA,gBAAgBX,SAAS,CAACc;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,WAAW,GAAGI,GAAd,CAAmBF,QAAD,iBACjB;AAAA,8BACE;AAAA,6BAAYA,QAAQ,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BD;;GAAMZ,gB;;MAAAA,gB;AA6BN,eAAeA,gBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CharacterName = styled.h4``;\n\ninterface CharacterProps {\n  character: Character;\n}\n\nconst CharacterBuilder: React.FC<CharacterProps> = ({ character }) => {\n  const { state } = useContext(AppContext);\n\n  const getResponses = (dID: string) =>\n    state.responses.filter((res) => res.parent === dID);\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(\n      (dialogue) => dialogue.character === character.name\n    );\n    return retrieved.map((char) => ({\n      ...char,\n      responses: getResponses(char.name),\n    }));\n  };\n\n  return (\n    <CharacterContainer>\n      <CharacterName>{character.displayName}</CharacterName>\n      {getDialogue().map((dialogue) => (\n        <div>\n          <div>Name: {dialogue.name}</div>\n          <div></div>\n        </div>\n      ))}\n    </CharacterContainer>\n  );\n};\n\nexport default CharacterBuilder;\n"]},"metadata":{},"sourceType":"module"}