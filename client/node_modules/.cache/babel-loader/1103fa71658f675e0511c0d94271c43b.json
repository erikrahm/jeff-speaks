{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { pickBy, reduce } from \"lodash\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Select from \"react-virtualized-select\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CharacterContainer;\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n_c2 = CharacterName;\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  div {\n    display: flex;\n    flex-direction: row;\n  }\n\n  pre {\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n\n    &:first-of-type {\n      border-right: 1px solid darkgray;\n    }\n  }\n`;\n_c3 = DialogueHeader;\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n_c4 = DialogueWrapper;\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 0;\n`;\n_c5 = ResponsesWrapper;\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n_c6 = ResponseContainer;\nconst True = styled.span`\n  color: green;\n`;\n_c7 = True;\nconst False = styled.span`\n  color: red;\n`;\n_c8 = False;\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n_c9 = DialogueParagraph;\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n_c10 = DialogueID;\nconst EditButton = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  text-transform: uppercase;\n  font-size: 10px;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: #ffffff;\n    background: steelblue;\n  }\n`;\n_c11 = EditButton;\nconst FakeInput = styled.span`\n  background: #ffffff;\n  border-right: 1px solid darkgray;\n  text-align: left;\n  align-items: center;\n  padding: 12px 10px 0;\n  font-size: 12px;\n  text-transform: uppercase;\n  min-width: 50px;\n  letter-spacing: 0.5px;\n`;\n_c12 = FakeInput;\nconst DialogueEditArea = styled.textarea`\n  width: 100%;\n  border: 1px solid darkgray;\n  font-family: \"sans-serif\";\n  font-size: 18px;\n`;\n_c13 = DialogueEditArea;\n\nconst CharacterBuilder = ({\n  character\n}) => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [editing, updateEditing] = useState(\"\");\n  const [characterState, updateCharacterState] = useState();\n  useEffect(() => {\n    updateCharacterState(getDialogue());\n  }, [state]);\n\n  const getConditional = cID => state.conditions[cID] || {\n    name: \"NONE\",\n    met: true\n  };\n\n  const getResponses = dID => Object.values(pickBy(state.responses, res => res.parent === dID));\n\n  const getDialogue = () => reduce(state.dialogue, (results, dialogue, key) => {\n    if (dialogue.character === character.name) {\n      results = [...results, { ...dialogue,\n        responses: getResponses(dialogue.name).map(resp => ({ ...resp,\n          conditionMet: getConditional(resp.condition).met\n        }))\n      }];\n    }\n\n    return results;\n  }, []);\n\n  const editSection = section => {\n    updateEditing(section.name);\n  };\n\n  const saveDialogue = (ID, payload, isResponse) => {\n    dispatch({\n      type: isResponse ? \"editResponse\" : \"editDialogue\",\n      payload,\n      edit: ID\n    });\n    updateEditing(\"\");\n  };\n\n  const addDialogue = () => {};\n\n  const addResponse = () => {};\n\n  return characterState ? /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n      children: character.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), characterState.map(dialogue => /*#__PURE__*/_jsxDEV(DialogueWrapper, {\n      id: dialogue.name,\n      children: [editing === dialogue.name ? /*#__PURE__*/_jsxDEV(DialogueBuilder, {\n        dialogue: dialogue,\n        handleSave: saveDialogue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n          children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n            children: dialogue.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              children: dialogue.default && /*#__PURE__*/_jsxDEV(True, {\n                children: \"DEFAULT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n              onClick: () => editSection(dialogue),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n          children: [\"\\\"\", dialogue.dialogue, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ResponsesWrapper, {\n        children: dialogue.responses.map(resp => /*#__PURE__*/_jsxDEV(ResponseContainer, {\n          id: resp.name,\n          children: editing === resp.name ? /*#__PURE__*/_jsxDEV(DialogueBuilder, {\n            dialogue: resp,\n            handleSave: saveDialogue,\n            isResponse: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n              children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n                children: resp.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `#${resp.next}`,\n                  children: [\"Next: \", resp.next]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: [\"Condition:\", \" \", resp.conditionMet ? /*#__PURE__*/_jsxDEV(True, {\n                    children: resp.condition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(False, {\n                    children: resp.condition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n                  onClick: () => editSection(resp),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n              children: [\"\\\"[\", resp.category, \"] \", resp.dialogue, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(CharacterBuilder, \"UudrQNgrSFfSfBex0SnwcyJXU4I=\");\n\n_c14 = CharacterBuilder;\n\nconst DialogueBuilder = ({\n  dialogue,\n  handleSave,\n  isResponse = false\n}) => {\n  _s2();\n\n  const {\n    state\n  } = useContext(AppContext);\n  const [editedDialogue, updateEditedDialogue] = useState(dialogue);\n\n  const handleChange = (value, propertyName) => {\n    updateEditedDialogue({ ...editedDialogue,\n      [propertyName]: value\n    });\n  };\n\n  const save = () => {\n    handleSave(dialogue.name, editedDialogue, isResponse);\n  };\n\n  const preventNewLine = event => {\n    if (event.keyCode == 13) event.preventDefault();\n  };\n\n  const getNames = section => {\n    const { ...prunedSection\n    } = section;\n    const keys = Object.keys(section);\n    return Object.values(section).map((item, index) => ({\n      key: item.name,\n      label: `[${item.name}]: ${item.dialogue}`,\n      value: section[keys[index]]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: getNames(state.dialogue),\n      onChange: option => handleChange(option.key, \"parent\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogueHeader, {\n      children: [/*#__PURE__*/_jsxDEV(FakeInput, {\n        role: \"textbox\",\n        contentEditable: true,\n        onInput: event => handleChange(event.currentTarget.innerText, \"name\"),\n        children: dialogue.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"default\" in editedDialogue && !isResponse && /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: [editedDialogue.default ? /*#__PURE__*/_jsxDEV(True, {\n            children: \"DEFAULT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(False, {\n            children: \"DEFAULT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: editedDialogue.default,\n            onChange: event => handleChange(event.currentTarget.checked, \"default\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), \"parent\" in editedDialogue && isResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            options: getNames(state.dialogue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"hey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n          onClick: save,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n      children: /*#__PURE__*/_jsxDEV(DialogueEditArea, {\n        className: \"input\",\n        onChange: event => handleChange(event.currentTarget.value, \"dialogue\"),\n        onKeyDown: preventNewLine,\n        rows: 5,\n        children: editedDialogue.dialogue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DialogueBuilder, \"9J6ZgPh7HeWCymVuA3qaisoQz5M=\");\n\n_c15 = DialogueBuilder;\nexport default CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"CharacterContainer\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"DialogueHeader\");\n$RefreshReg$(_c4, \"DialogueWrapper\");\n$RefreshReg$(_c5, \"ResponsesWrapper\");\n$RefreshReg$(_c6, \"ResponseContainer\");\n$RefreshReg$(_c7, \"True\");\n$RefreshReg$(_c8, \"False\");\n$RefreshReg$(_c9, \"DialogueParagraph\");\n$RefreshReg$(_c10, \"DialogueID\");\n$RefreshReg$(_c11, \"EditButton\");\n$RefreshReg$(_c12, \"FakeInput\");\n$RefreshReg$(_c13, \"DialogueEditArea\");\n$RefreshReg$(_c14, \"CharacterBuilder\");\n$RefreshReg$(_c15, \"DialogueBuilder\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx"],"names":["pickBy","reduce","React","useContext","useState","useEffect","Select","styled","AppContext","CharacterContainer","div","CharacterName","h4","DialogueHeader","DialogueWrapper","ResponsesWrapper","ResponseContainer","True","span","False","DialogueParagraph","p","DialogueID","pre","EditButton","FakeInput","DialogueEditArea","textarea","CharacterBuilder","character","state","dispatch","editing","updateEditing","characterState","updateCharacterState","getDialogue","getConditional","cID","conditions","name","met","getResponses","dID","Object","values","responses","res","parent","dialogue","results","key","map","resp","conditionMet","condition","editSection","section","saveDialogue","ID","payload","isResponse","type","edit","addDialogue","addResponse","displayName","default","next","category","DialogueBuilder","handleSave","editedDialogue","updateEditedDialogue","handleChange","value","propertyName","save","preventNewLine","event","keyCode","preventDefault","getNames","prunedSection","keys","item","index","label","option","currentTarget","innerText","checked"],"mappings":"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","sourcesContent":["import { pickBy, reduce } from \"lodash\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Select from \"react-virtualized-select\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  div {\n    display: flex;\n    flex-direction: row;\n  }\n\n  pre {\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n\n    &:first-of-type {\n      border-right: 1px solid darkgray;\n    }\n  }\n`;\n\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 0;\n`;\n\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n\nconst True = styled.span`\n  color: green;\n`;\n\nconst False = styled.span`\n  color: red;\n`;\n\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n\nconst EditButton = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  text-transform: uppercase;\n  font-size: 10px;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: #ffffff;\n    background: steelblue;\n  }\n`;\n\nconst FakeInput = styled.span`\n  background: #ffffff;\n  border-right: 1px solid darkgray;\n  text-align: left;\n  align-items: center;\n  padding: 12px 10px 0;\n  font-size: 12px;\n  text-transform: uppercase;\n  min-width: 50px;\n  letter-spacing: 0.5px;\n`;\n\nconst DialogueEditArea = styled.textarea`\n  width: 100%;\n  border: 1px solid darkgray;\n  font-family: \"sans-serif\";\n  font-size: 18px;\n`;\n\ninterface ResponseRender extends DialogueResponse {\n  conditionMet: boolean;\n}\n\ninterface DialogueRender extends Dialogue {\n  responses: ResponseRender[];\n}\n\ninterface CharacterProps {\n  character: Character;\n}\n\nconst CharacterBuilder: React.FC<CharacterProps> = ({ character }) => {\n  const { state, dispatch } = useContext(AppContext);\n  const [editing, updateEditing] = useState(\"\");\n  const [characterState, updateCharacterState] = useState<DialogueRender[]>();\n\n  useEffect(() => {\n    updateCharacterState(getDialogue());\n  }, [state]);\n\n  const getConditional = (cID: string) =>\n    state.conditions[cID] || {\n      name: \"NONE\",\n      met: true,\n    };\n\n  const getResponses = (dID: string): DialogueResponse[] =>\n    Object.values(pickBy(state.responses, (res) => res.parent === dID));\n\n  const getDialogue = () =>\n    reduce(\n      state.dialogue,\n      (results, dialogue, key) => {\n        if (dialogue.character === character.name) {\n          results = [\n            ...results,\n            {\n              ...dialogue,\n              responses: getResponses(dialogue.name).map((resp) => ({\n                ...resp,\n                conditionMet: getConditional(resp.condition).met,\n              })),\n            },\n          ];\n        }\n        return results;\n      },\n      [] as unknown as DialogueRender[]\n    );\n\n  const editSection = (section: any) => {\n    updateEditing(section.name);\n  };\n\n  const saveDialogue = (\n    ID: string,\n    payload: Dialogue | DialogueResponse,\n    isResponse: boolean\n  ) => {\n    dispatch({\n      type: isResponse ? \"editResponse\" : \"editDialogue\",\n      payload,\n      edit: ID,\n    });\n    updateEditing(\"\");\n  };\n\n  const addDialogue = () => {};\n\n  const addResponse = () => {};\n\n  return characterState ? (\n    <CharacterContainer>\n      <CharacterName>{character.displayName}</CharacterName>\n      {characterState.map((dialogue) => (\n        <DialogueWrapper id={dialogue.name}>\n          {editing === dialogue.name ? (\n            <DialogueBuilder dialogue={dialogue} handleSave={saveDialogue} />\n          ) : (\n            <>\n              <DialogueHeader>\n                <DialogueID>{dialogue.name}</DialogueID>\n                <div>\n                  <pre>{dialogue.default && <True>DEFAULT</True>}</pre>\n                  <EditButton onClick={() => editSection(dialogue)}>\n                    Edit\n                  </EditButton>\n                </div>\n              </DialogueHeader>\n              <DialogueParagraph>\"{dialogue.dialogue}\"</DialogueParagraph>\n            </>\n          )}\n          <ResponsesWrapper>\n            {dialogue.responses.map((resp) => (\n              <ResponseContainer id={resp.name}>\n                {editing === resp.name ? (\n                  <DialogueBuilder\n                    dialogue={resp}\n                    handleSave={saveDialogue}\n                    isResponse\n                  />\n                ) : (\n                  <>\n                    <DialogueHeader>\n                      <DialogueID>{resp.name}</DialogueID>\n                      <pre>\n                        <a href={`#${resp.next}`}>Next: {resp.next}</a>\n                      </pre>\n                      <div>\n                        <pre>\n                          Condition:{\" \"}\n                          {resp.conditionMet ? (\n                            <True>{resp.condition}</True>\n                          ) : (\n                            <False>{resp.condition}</False>\n                          )}\n                        </pre>\n                        <EditButton onClick={() => editSection(resp)}>\n                          Edit\n                        </EditButton>\n                      </div>\n                    </DialogueHeader>\n                    <DialogueParagraph>\n                      \"[{resp.category}] {resp.dialogue}\"\n                    </DialogueParagraph>\n                  </>\n                )}\n              </ResponseContainer>\n            ))}\n          </ResponsesWrapper>\n        </DialogueWrapper>\n      ))}\n    </CharacterContainer>\n  ) : null;\n};\n\ninterface DialogueBuilderProps {\n  dialogue: Dialogue | DialogueResponse;\n  handleSave: (\n    ID: string,\n    payload: Dialogue | DialogueResponse,\n    isResponse: boolean\n  ) => void;\n  isResponse?: boolean;\n}\n\nconst DialogueBuilder: React.FC<DialogueBuilderProps> = ({\n  dialogue,\n  handleSave,\n  isResponse = false,\n}) => {\n  const { state } = useContext(AppContext);\n  const [editedDialogue, updateEditedDialogue] = useState(dialogue);\n\n  const handleChange = (value: any, propertyName: string) => {\n    updateEditedDialogue({\n      ...editedDialogue,\n      [propertyName]: value,\n    });\n  };\n\n  const save = () => {\n    handleSave(dialogue.name, editedDialogue, isResponse);\n  };\n\n  const preventNewLine = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.keyCode == 13) event.preventDefault();\n  };\n\n  const getNames = <T extends { [key: string]: Dialogue | DialogueResponse }>(\n    section: T\n  ): { key: string; label: string; value: T[keyof T] }[] => {\n    const { ...prunedSection } = section;\n    const keys: Array<keyof T> = Object.keys(section) as Array<keyof T>;\n    return Object.values(section).map((item, index) => ({\n      key: item.name,\n      label: `[${item.name}]: ${item.dialogue}`,\n      value: section[keys[index]],\n    }));\n  };\n\n  return (\n    <div>\n      <Select\n        options={getNames<{ [key: string]: Dialogue }>(state.dialogue)}\n        onChange={(option: any) => handleChange(option.key, \"parent\")}\n      />\n      <DialogueHeader>\n        <FakeInput\n          role=\"textbox\"\n          contentEditable\n          onInput={(event) =>\n            handleChange(event.currentTarget.innerText, \"name\")\n          }\n        >\n          {dialogue.name}\n        </FakeInput>\n\n        <div>\n          {\"default\" in editedDialogue && !isResponse && (\n            <pre>\n              {editedDialogue.default ? (\n                <True>DEFAULT</True>\n              ) : (\n                <False>DEFAULT</False>\n              )}\n              <input\n                type=\"checkbox\"\n                checked={editedDialogue.default}\n                onChange={(event) =>\n                  handleChange(event.currentTarget.checked, \"default\")\n                }\n              />\n            </pre>\n          )}\n          {\"parent\" in editedDialogue && isResponse && (\n            <div>\n              <Select options={getNames(state.dialogue)} />\n              <div>hey</div>\n            </div>\n          )}\n          <EditButton onClick={save}>save</EditButton>\n        </div>\n      </DialogueHeader>\n      <DialogueParagraph>\n        <DialogueEditArea\n          className=\"input\"\n          onChange={(event) =>\n            handleChange(event.currentTarget.value, \"dialogue\")\n          }\n          onKeyDown={preventNewLine}\n          rows={5}\n        >\n          {editedDialogue.dialogue}\n        </DialogueEditArea>\n      </DialogueParagraph>\n    </div>\n  );\n};\n\nexport default CharacterBuilder;\n"]},"metadata":{},"sourceType":"module"}