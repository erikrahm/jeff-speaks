{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/client/src/components/CharacterBuilder.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { pickBy, reduce } from \"lodash\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Select from \"react-virtualized-select\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CharacterContainer;\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n_c2 = CharacterName;\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  pre {\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n\n    &:first-of-type {\n      border-right: 1px solid darkgray;\n    }\n  }\n`;\n_c3 = DialogueHeader;\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n_c4 = DialogueWrapper;\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 10px;\n  align-items: center;\n`;\n_c5 = ResponsesWrapper;\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 10px;\n  }\n`;\n_c6 = ResponseContainer;\nconst True = styled.span`\n  color: darkolivegreen;\n\n  /* If you want to implement it in very old browser-versions */\n  -webkit-user-select: none; /* Chrome/Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+ */\n\n  /* The rule below is not implemented in browsers yet */\n  -o-user-select: none;\n\n  /* The rule below is implemented in most browsers by now */\n  user-select: none;\n`;\n_c7 = True;\nconst False = styled.span`\n  color: palevioletred;\n\n  /* If you want to implement it in very old browser-versions */\n  -webkit-user-select: none; /* Chrome/Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+ */\n\n  /* The rule below is not implemented in browsers yet */\n  -o-user-select: none;\n\n  /* The rule below is implemented in most browsers by now */\n  user-select: none;\n`;\n_c8 = False;\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n_c9 = DialogueParagraph;\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n_c10 = DialogueID;\nconst EditButton = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  text-transform: uppercase;\n  font-size: 10px;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: #ffffff;\n    background: steelblue;\n  }\n`;\n_c11 = EditButton;\nconst FakeInput = styled.span`\n  background: #ffffff;\n  border-right: 1px solid darkgray;\n  text-align: left;\n  align-items: center;\n  padding: 12px 10px;\n  font-size: 12px;\n  text-transform: uppercase;\n  min-width: 50px;\n  letter-spacing: 0.5px;\n`;\n_c12 = FakeInput;\nconst DialogueEditArea = styled.textarea`\n  width: 100%;\n  border: 1px solid darkgray;\n  font-family: \"Helvetica Neue\" !important;\n  font-size: 16px;\n`;\n_c13 = DialogueEditArea;\nconst SelectContainer = styled(Select)`\n  width: 200px;\n`;\n_c14 = SelectContainer;\nconst Selections = styled.div`\n  position: absolute;\n  background: #ffffff;\n  display: flex;\n  border: 1px solid darkgray;\n  flex-direction: column;\n  font-size: 12px;\n  padding: 9px 8px 8px;\n  top: -1px;\n  right: 100%;\n\n  .selectionLabel {\n    display: flex;\n    width: 280px;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2px;\n\n    span {\n      font-weight: bold;\n      color: steelblue;\n    }\n\n    .Select-value-label {\n      color: #aaaaaa !important;\n      font-weight: 500;\n    }\n  }\n`;\n_c15 = Selections;\nconst EditWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c16 = EditWrapper;\nconst DefaultLael = styled.label`\n  display: flex;\n  align-items: center;\n\n  input {\n    margin-left: 5px;\n  }\n`;\n_c17 = DefaultLael;\nconst CharacterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h4 {\n    margin: 0;\n  }\n`;\n_c18 = CharacterHeader;\nconst AddButton = styled.button`\n  background: steelblue;\n  color: #ffffff;\n  border: 2px solid steelblue;\n  padding: 5px 20px;\n  font-size: 14px;\n  cursor: pointer;\n  border-radius: 8px;\n\n  &:hover {\n    background: #ffffff;\n    color: steelblue;\n  }\n`;\n_c19 = AddButton;\nconst EditableWrapper = styled.div`\n  position: relative;\n`;\n_c20 = EditableWrapper;\nconst ResponseNameWrapper = styled.div`\n  display: flex;\n`;\n_c21 = ResponseNameWrapper;\n\nconst CharacterBuilder = ({\n  character\n}) => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [editing, updateEditing] = useState(\"\");\n  const [characterState, updateCharacterState] = useState();\n  useEffect(() => {\n    updateCharacterState(getDialogue());\n  }, [state]);\n\n  const getConditional = cID => state.conditions[cID] || {\n    name: \"NONE\",\n    met: true\n  };\n\n  const getResponses = dID => Object.values(pickBy(state.responses, res => res.parent === dID));\n\n  const getDialogue = () => reduce(state.dialogue, (results, dialogue, key) => {\n    if (dialogue.character === character.name) {\n      results = [...results, { ...dialogue,\n        responses: getResponses(dialogue.name).map(resp => ({ ...resp,\n          conditionMet: getConditional(resp.condition).met\n        }))\n      }];\n    }\n\n    return results;\n  }, []);\n\n  const editSection = section => {\n    updateEditing(section.name);\n  };\n\n  const saveDialogue = (ID, payload, isResponse) => {\n    updateEditing(\"\");\n    dispatch({\n      type: isResponse ? \"editResponse\" : \"editDialogue\",\n      payload,\n      edit: ID\n    });\n  };\n\n  const addDialogue = () => {\n    const newID = `DLG_${character.name}${characterState.length + 1}`;\n    const newDialogue = {\n      name: newID,\n      character: character.name,\n      dialogue: \"Placeholder dialogue.\",\n      default: character.default.length ? false : true\n    };\n    dispatch({\n      type: \"addDialogue\",\n      payload: newDialogue\n    });\n    updateEditing(newID);\n  };\n\n  const addResponse = (parent, current) => {\n    const newID = `RES_${character.name}${current + 1}`;\n    const newDialogue = {\n      name: newID,\n      parent: parent,\n      category: \"Generic\",\n      next: parent,\n      condition: \"\",\n      dialogue: \"Placeholder dialogue.\"\n    };\n    dispatch({\n      type: \"addResponse\",\n      payload: newDialogue\n    });\n    updateEditing(newID);\n  };\n\n  return characterState ? /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterHeader, {\n      id: character.name,\n      children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n        children: character.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        onClick: addDialogue,\n        children: \"Add Dialogue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), characterState.map(dialogue => /*#__PURE__*/_jsxDEV(DialogueWrapper, {\n      id: dialogue.name,\n      children: [editing === dialogue.name ? /*#__PURE__*/_jsxDEV(DialogueBuilder, {\n        dialogue: dialogue,\n        handleSave: saveDialogue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n          children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n            children: dialogue.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(EditWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              children: dialogue.default && /*#__PURE__*/_jsxDEV(True, {\n                children: \"DEFAULT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n              onClick: () => editSection(dialogue),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n          children: [\"\\\"\", dialogue.dialogue, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ResponsesWrapper, {\n        children: [dialogue.responses.map(resp => /*#__PURE__*/_jsxDEV(ResponseContainer, {\n          id: resp.name,\n          children: editing === resp.name ? /*#__PURE__*/_jsxDEV(DialogueBuilder, {\n            dialogue: resp,\n            handleSave: saveDialogue,\n            isResponse: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n              children: [/*#__PURE__*/_jsxDEV(ResponseNameWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n                  children: resp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `#${resp.next}`,\n                    children: [\"Next: \", resp.next]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(EditWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: [\"Condition:\", \" \", resp.conditionMet ? /*#__PURE__*/_jsxDEV(True, {\n                    children: resp.condition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(False, {\n                    children: resp.condition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n                  onClick: () => editSection(resp),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n              children: [\"\\\"[\", resp.category, \"] \", resp.dialogue, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => addResponse(dialogue.name, dialogue.responses.length),\n          children: \"Add Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(CharacterBuilder, \"UudrQNgrSFfSfBex0SnwcyJXU4I=\");\n\n_c22 = CharacterBuilder;\n\nconst DialogueBuilder = ({\n  dialogue,\n  handleSave,\n  isResponse = false\n}) => {\n  _s2();\n\n  const {\n    state\n  } = useContext(AppContext);\n  const [editedDialogue, updateEditedDialogue] = useState(dialogue);\n\n  const handleChange = (value, propertyName) => {\n    updateEditedDialogue({ ...editedDialogue,\n      [propertyName]: value\n    });\n  };\n\n  const save = () => {\n    handleSave(dialogue.name, editedDialogue, isResponse);\n  };\n\n  const preventNewLine = event => {\n    if (event.keyCode == 13) event.preventDefault();\n  };\n\n  const getNames = section => {\n    const keys = Object.keys(section);\n    return Object.values(section).map((item, index) => ({\n      key: item.name,\n      label: item.name,\n      value: section[keys[index]]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditableWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n      children: [/*#__PURE__*/_jsxDEV(FakeInput, {\n        role: \"textbox\",\n        contentEditable: true,\n        onInput: event => handleChange(event.currentTarget.innerText, \"name\"),\n        children: dialogue.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditWrapper, {\n        children: [\"default\" in editedDialogue && !isResponse ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(DefaultLael, {\n            htmlFor: `${dialogue.name}-default-toggle`,\n            children: [editedDialogue.default ? /*#__PURE__*/_jsxDEV(True, {\n              children: \"DEFAULT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(False, {\n              children: \"DEFAULT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `${dialogue.name}-default-toggle`,\n              type: \"checkbox\",\n              checked: editedDialogue.default,\n              onChange: event => handleChange(event.currentTarget.checked, \"default\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // lmao I'm so lazy to do this just to get a border, but whatever\n        _jsxDEV(\"pre\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n          onClick: save,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), \"parent\" in editedDialogue && isResponse && /*#__PURE__*/_jsxDEV(Selections, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectionLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"PARENT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n          value: editedDialogue.parent,\n          placeholder: editedDialogue.parent,\n          options: getNames(state.dialogue),\n          onChange: option => handleChange(option.key, \"parent\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectionLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"NEXT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n          options: getNames(state.dialogue),\n          placeholder: editedDialogue.next,\n          value: editedDialogue.next,\n          onChange: option => handleChange(option.key, \"next\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectionLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"CATEGORY:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n          backspaceRemoves: false,\n          clearable: false,\n          value: editedDialogue.category,\n          placeholder: editedDialogue.category,\n          options: state.categories.map(value => ({\n            key: value,\n            label: `[${value}]`,\n            value: value\n          })),\n          onChange: option => handleChange(option.key, \"category\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectionLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"CONDITION:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n          value: editedDialogue.condition,\n          placeholder: editedDialogue.condition,\n          options: getNames(state.conditions),\n          onChange: option => handleChange(option.key, \"condition\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n      children: /*#__PURE__*/_jsxDEV(DialogueEditArea, {\n        className: \"input\",\n        onChange: event => handleChange(event.currentTarget.value, \"dialogue\"),\n        onKeyDown: preventNewLine,\n        rows: 5,\n        children: editedDialogue.dialogue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DialogueBuilder, \"9J6ZgPh7HeWCymVuA3qaisoQz5M=\");\n\n_c23 = DialogueBuilder;\n\nconst usePrevious = value => {\n  _s3();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\n_s3(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport default CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n\n$RefreshReg$(_c, \"CharacterContainer\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"DialogueHeader\");\n$RefreshReg$(_c4, \"DialogueWrapper\");\n$RefreshReg$(_c5, \"ResponsesWrapper\");\n$RefreshReg$(_c6, \"ResponseContainer\");\n$RefreshReg$(_c7, \"True\");\n$RefreshReg$(_c8, \"False\");\n$RefreshReg$(_c9, \"DialogueParagraph\");\n$RefreshReg$(_c10, \"DialogueID\");\n$RefreshReg$(_c11, \"EditButton\");\n$RefreshReg$(_c12, \"FakeInput\");\n$RefreshReg$(_c13, \"DialogueEditArea\");\n$RefreshReg$(_c14, \"SelectContainer\");\n$RefreshReg$(_c15, \"Selections\");\n$RefreshReg$(_c16, \"EditWrapper\");\n$RefreshReg$(_c17, \"DefaultLael\");\n$RefreshReg$(_c18, \"CharacterHeader\");\n$RefreshReg$(_c19, \"AddButton\");\n$RefreshReg$(_c20, \"EditableWrapper\");\n$RefreshReg$(_c21, \"ResponseNameWrapper\");\n$RefreshReg$(_c22, \"CharacterBuilder\");\n$RefreshReg$(_c23, \"DialogueBuilder\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/client/src/components/CharacterBuilder.tsx"],"names":["pickBy","reduce","React","useContext","useState","useEffect","useRef","Select","styled","AppContext","CharacterContainer","div","CharacterName","h4","DialogueHeader","DialogueWrapper","ResponsesWrapper","ResponseContainer","True","span","False","DialogueParagraph","p","DialogueID","pre","EditButton","FakeInput","DialogueEditArea","textarea","SelectContainer","Selections","EditWrapper","DefaultLael","label","CharacterHeader","AddButton","button","EditableWrapper","ResponseNameWrapper","CharacterBuilder","character","state","dispatch","editing","updateEditing","characterState","updateCharacterState","getDialogue","getConditional","cID","conditions","name","met","getResponses","dID","Object","values","responses","res","parent","dialogue","results","key","map","resp","conditionMet","condition","editSection","section","saveDialogue","ID","payload","isResponse","type","edit","addDialogue","newID","length","newDialogue","default","addResponse","current","category","next","displayName","DialogueBuilder","handleSave","editedDialogue","updateEditedDialogue","handleChange","value","propertyName","save","preventNewLine","event","keyCode","preventDefault","getNames","keys","item","index","currentTarget","innerText","checked","option","categories","usePrevious","ref"],"mappings":"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","sourcesContent":["import { keyBy, pickBy, reduce } from \"lodash\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport Select from \"react-virtualized-select\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  pre {\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n\n    &:first-of-type {\n      border-right: 1px solid darkgray;\n    }\n  }\n`;\n\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 10px;\n  align-items: center;\n`;\n\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 10px;\n  }\n`;\n\nconst True = styled.span`\n  color: darkolivegreen;\n\n  /* If you want to implement it in very old browser-versions */\n  -webkit-user-select: none; /* Chrome/Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+ */\n\n  /* The rule below is not implemented in browsers yet */\n  -o-user-select: none;\n\n  /* The rule below is implemented in most browsers by now */\n  user-select: none;\n`;\n\nconst False = styled.span`\n  color: palevioletred;\n\n  /* If you want to implement it in very old browser-versions */\n  -webkit-user-select: none; /* Chrome/Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+ */\n\n  /* The rule below is not implemented in browsers yet */\n  -o-user-select: none;\n\n  /* The rule below is implemented in most browsers by now */\n  user-select: none;\n`;\n\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n\nconst EditButton = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  text-transform: uppercase;\n  font-size: 10px;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: #ffffff;\n    background: steelblue;\n  }\n`;\n\nconst FakeInput = styled.span`\n  background: #ffffff;\n  border-right: 1px solid darkgray;\n  text-align: left;\n  align-items: center;\n  padding: 12px 10px;\n  font-size: 12px;\n  text-transform: uppercase;\n  min-width: 50px;\n  letter-spacing: 0.5px;\n`;\n\nconst DialogueEditArea = styled.textarea`\n  width: 100%;\n  border: 1px solid darkgray;\n  font-family: \"Helvetica Neue\" !important;\n  font-size: 16px;\n`;\n\nconst SelectContainer = styled(Select)`\n  width: 200px;\n`;\n\nconst Selections = styled.div`\n  position: absolute;\n  background: #ffffff;\n  display: flex;\n  border: 1px solid darkgray;\n  flex-direction: column;\n  font-size: 12px;\n  padding: 9px 8px 8px;\n  top: -1px;\n  right: 100%;\n\n  .selectionLabel {\n    display: flex;\n    width: 280px;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2px;\n\n    span {\n      font-weight: bold;\n      color: steelblue;\n    }\n\n    .Select-value-label {\n      color: #aaaaaa !important;\n      font-weight: 500;\n    }\n  }\n`;\n\nconst EditWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst DefaultLael = styled.label`\n  display: flex;\n  align-items: center;\n\n  input {\n    margin-left: 5px;\n  }\n`;\n\nconst CharacterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h4 {\n    margin: 0;\n  }\n`;\n\nconst AddButton = styled.button`\n  background: steelblue;\n  color: #ffffff;\n  border: 2px solid steelblue;\n  padding: 5px 20px;\n  font-size: 14px;\n  cursor: pointer;\n  border-radius: 8px;\n\n  &:hover {\n    background: #ffffff;\n    color: steelblue;\n  }\n`;\n\nconst EditableWrapper = styled.div`\n  position: relative;\n`;\n\nconst ResponseNameWrapper = styled.div`\n  display: flex;\n`;\n\ninterface ResponseRender extends DialogueResponse {\n  conditionMet: boolean;\n}\n\ninterface DialogueRender extends Dialogue {\n  responses: ResponseRender[];\n}\n\ninterface CharacterProps {\n  character: Character;\n}\n\nconst CharacterBuilder: React.FC<CharacterProps> = ({ character }) => {\n  const { state, dispatch } = useContext(AppContext);\n  const [editing, updateEditing] = useState(\"\");\n  const [characterState, updateCharacterState] = useState<DialogueRender[]>();\n\n  useEffect(() => {\n    updateCharacterState(getDialogue());\n  }, [state]);\n\n  const getConditional = (cID: string) =>\n    state.conditions[cID] || {\n      name: \"NONE\",\n      met: true,\n    };\n\n  const getResponses = (dID: string): DialogueResponse[] =>\n    Object.values(pickBy(state.responses, (res) => res.parent === dID));\n\n  const getDialogue = () =>\n    reduce(\n      state.dialogue,\n      (results, dialogue, key) => {\n        if (dialogue.character === character.name) {\n          results = [\n            ...results,\n            {\n              ...dialogue,\n              responses: getResponses(dialogue.name).map((resp) => ({\n                ...resp,\n                conditionMet: getConditional(resp.condition).met,\n              })),\n            },\n          ];\n        }\n        return results;\n      },\n      [] as unknown as DialogueRender[]\n    );\n\n  const editSection = (section: any) => {\n    updateEditing(section.name);\n  };\n\n  const saveDialogue = (\n    ID: string,\n    payload: Dialogue | DialogueResponse,\n    isResponse: boolean\n  ) => {\n    updateEditing(\"\");\n    dispatch({\n      type: isResponse ? \"editResponse\" : \"editDialogue\",\n      payload,\n      edit: ID,\n    });\n  };\n\n  const addDialogue = () => {\n    const newID = `DLG_${character.name}${characterState!.length + 1}`;\n    const newDialogue: Dialogue = {\n      name: newID,\n      character: character.name,\n      dialogue: \"Placeholder dialogue.\",\n      default: character.default.length ? false : true,\n    };\n    dispatch({\n      type: \"addDialogue\",\n      payload: newDialogue,\n    });\n    updateEditing(newID);\n  };\n\n  const addResponse = (parent: string, current: number) => {\n    const newID = `RES_${character.name}${current + 1}`;\n    const newDialogue: DialogueResponse = {\n      name: newID,\n      parent: parent,\n      category: \"Generic\",\n      next: parent,\n      condition: \"\",\n      dialogue: \"Placeholder dialogue.\",\n    };\n    dispatch({\n      type: \"addResponse\",\n      payload: newDialogue,\n    });\n    updateEditing(newID);\n  };\n\n  return characterState ? (\n    <CharacterContainer>\n      <CharacterHeader id={character.name}>\n        <CharacterName>{character.displayName}</CharacterName>\n        <AddButton onClick={addDialogue}>Add Dialogue</AddButton>\n      </CharacterHeader>\n      {characterState.map((dialogue) => (\n        <DialogueWrapper id={dialogue.name}>\n          {editing === dialogue.name ? (\n            <DialogueBuilder dialogue={dialogue} handleSave={saveDialogue} />\n          ) : (\n            <>\n              <DialogueHeader>\n                <DialogueID>{dialogue.name}</DialogueID>\n                <EditWrapper>\n                  <pre>{dialogue.default && <True>DEFAULT</True>}</pre>\n                  <EditButton onClick={() => editSection(dialogue)}>\n                    Edit\n                  </EditButton>\n                </EditWrapper>\n              </DialogueHeader>\n              <DialogueParagraph>\"{dialogue.dialogue}\"</DialogueParagraph>\n            </>\n          )}\n          <ResponsesWrapper>\n            {dialogue.responses.map((resp) => (\n              <ResponseContainer id={resp.name}>\n                {editing === resp.name ? (\n                  <DialogueBuilder\n                    dialogue={resp}\n                    handleSave={saveDialogue}\n                    isResponse\n                  />\n                ) : (\n                  <>\n                    <DialogueHeader>\n                      <ResponseNameWrapper>\n                        <DialogueID>{resp.name}</DialogueID>\n                        <pre>\n                          <a href={`#${resp.next}`}>Next: {resp.next}</a>\n                        </pre>\n                      </ResponseNameWrapper>\n                      <EditWrapper>\n                        <pre>\n                          Condition:{\" \"}\n                          {resp.conditionMet ? (\n                            <True>{resp.condition}</True>\n                          ) : (\n                            <False>{resp.condition}</False>\n                          )}\n                        </pre>\n                        <EditButton onClick={() => editSection(resp)}>\n                          Edit\n                        </EditButton>\n                      </EditWrapper>\n                    </DialogueHeader>\n                    <DialogueParagraph>\n                      \"[{resp.category}] {resp.dialogue}\"\n                    </DialogueParagraph>\n                  </>\n                )}\n              </ResponseContainer>\n            ))}\n            <AddButton\n              onClick={() =>\n                addResponse(dialogue.name, dialogue.responses.length)\n              }\n            >\n              Add Response\n            </AddButton>\n          </ResponsesWrapper>\n        </DialogueWrapper>\n      ))}\n    </CharacterContainer>\n  ) : null;\n};\n\ninterface DialogueBuilderProps {\n  dialogue: Dialogue | DialogueResponse;\n  handleSave: (\n    ID: string,\n    payload: Dialogue | DialogueResponse,\n    isResponse: boolean\n  ) => void;\n  isResponse?: boolean;\n}\n\nconst DialogueBuilder: React.FC<DialogueBuilderProps> = ({\n  dialogue,\n  handleSave,\n  isResponse = false,\n}) => {\n  const { state } = useContext(AppContext);\n  const [editedDialogue, updateEditedDialogue] = useState(dialogue);\n\n  const handleChange = (value: any, propertyName: string) => {\n    updateEditedDialogue({\n      ...editedDialogue,\n      [propertyName]: value,\n    });\n  };\n\n  const save = () => {\n    handleSave(dialogue.name, editedDialogue, isResponse);\n  };\n\n  const preventNewLine = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.keyCode == 13) event.preventDefault();\n  };\n\n  const getNames = <\n    T extends { [key: string]: Dialogue | DialogueResponse | Condition }\n  >(\n    section: T\n  ): { key: string; label: string; value: T[keyof T] }[] => {\n    const keys: Array<keyof T> = Object.keys(section) as Array<keyof T>;\n    return Object.values(section).map((item, index) => ({\n      key: item.name,\n      label: item.name,\n      value: section[keys[index]],\n    }));\n  };\n\n  return (\n    <EditableWrapper>\n      <DialogueHeader>\n        <FakeInput\n          role=\"textbox\"\n          contentEditable\n          onInput={(event) =>\n            handleChange(event.currentTarget.innerText, \"name\")\n          }\n        >\n          {dialogue.name}\n        </FakeInput>\n\n        <EditWrapper>\n          {\"default\" in editedDialogue && !isResponse ? (\n            <pre>\n              <DefaultLael htmlFor={`${dialogue.name}-default-toggle`}>\n                {editedDialogue.default ? (\n                  <True>DEFAULT</True>\n                ) : (\n                  <False>DEFAULT</False>\n                )}\n                <input\n                  id={`${dialogue.name}-default-toggle`}\n                  type=\"checkbox\"\n                  checked={editedDialogue.default}\n                  onChange={(event) =>\n                    handleChange(event.currentTarget.checked, \"default\")\n                  }\n                />\n              </DefaultLael>\n            </pre>\n          ) : (\n            // lmao I'm so lazy to do this just to get a border, but whatever\n            <pre></pre>\n          )}\n          <EditButton onClick={save}>save</EditButton>\n        </EditWrapper>\n      </DialogueHeader>\n      {\"parent\" in editedDialogue && isResponse && (\n        <Selections>\n          <div className=\"selectionLabel\">\n            <span>PARENT:</span>\n            <SelectContainer\n              value={editedDialogue.parent}\n              placeholder={editedDialogue.parent}\n              options={getNames<{ [key: string]: Dialogue }>(state.dialogue)}\n              onChange={(option: any) => handleChange(option.key, \"parent\")}\n            />\n          </div>\n          <div className=\"selectionLabel\">\n            <span>NEXT:</span>\n            <SelectContainer\n              options={getNames<{ [key: string]: Dialogue }>(state.dialogue)}\n              placeholder={editedDialogue.next}\n              value={editedDialogue.next}\n              onChange={(option: any) => handleChange(option.key, \"next\")}\n            />\n          </div>\n          <div className=\"selectionLabel\">\n            <span>CATEGORY:</span>\n            <SelectContainer\n              backspaceRemoves={false}\n              clearable={false}\n              value={editedDialogue.category}\n              placeholder={editedDialogue.category}\n              options={state.categories.map((value) => ({\n                key: value,\n                label: `[${value}]`,\n                value: value,\n              }))}\n              onChange={(option: any) => handleChange(option.key, \"category\")}\n            />\n          </div>\n          <div className=\"selectionLabel\">\n            <span>CONDITION:</span>\n            <SelectContainer\n              value={editedDialogue.condition}\n              placeholder={editedDialogue.condition}\n              options={getNames<{ [key: string]: Condition }>(state.conditions)}\n              onChange={(option: any) => handleChange(option.key, \"condition\")}\n            />\n          </div>\n        </Selections>\n      )}\n      <DialogueParagraph>\n        <DialogueEditArea\n          className=\"input\"\n          onChange={(event) =>\n            handleChange(event.currentTarget.value, \"dialogue\")\n          }\n          onKeyDown={preventNewLine}\n          rows={5}\n        >\n          {editedDialogue.dialogue}\n        </DialogueEditArea>\n      </DialogueParagraph>\n    </EditableWrapper>\n  );\n};\n\nconst usePrevious = (value: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default CharacterBuilder;\n"]},"metadata":{},"sourceType":"module"}