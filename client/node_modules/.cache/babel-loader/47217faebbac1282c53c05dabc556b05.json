{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CharacterContainer;\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n_c2 = CharacterName;\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  pre {\n    display: flex;\n    flex-direction: row;\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n  }\n`;\n_c3 = DialogueHeader;\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n_c4 = DialogueWrapper;\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 0;\n`;\n_c5 = ResponsesWrapper;\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n_c6 = ResponseContainer;\nconst True = styled.span`\n  color: green;\n`;\n_c7 = True;\nconst False = styled.span`\n  color: red;\n`;\n_c8 = False;\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n_c9 = DialogueParagraph;\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n_c10 = DialogueID;\nconst EditButton = styled.div`\n  cursor: pointer;\n`;\n_c11 = EditButton;\n\nconst CharacterBuilder = ({\n  character\n}) => {\n  _s();\n\n  const {\n    state\n  } = useContext(AppContext);\n\n  const getConditional = cID => {\n    return state.conditions.find(condition => condition.name === cID) || {\n      name: \"NONE\",\n      met: true\n    };\n  };\n\n  const getResponses = dID => {\n    const responses = state.responses.filter(res => res.parent === dID);\n    return responses.map(resp => ({ ...resp,\n      conditionMet: getConditional(resp.condition).met\n    }));\n  };\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(dialogue => dialogue.character === character.name);\n    return retrieved.map(dia => ({ ...dia,\n      responses: getResponses(dia.name)\n    }));\n  };\n\n  console.log(\"HMMM: \", getDialogue());\n  return /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n      children: character.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), getDialogue().map(dialogue => /*#__PURE__*/_jsxDEV(DialogueWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n        children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n          children: dialogue.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: dialogue.default && /*#__PURE__*/_jsxDEV(True, {\n            children: \"DEFAULT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n        children: [\"\\\"\", dialogue.dialogue, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsesWrapper, {\n        children: dialogue.responses.map(resp => /*#__PURE__*/_jsxDEV(ResponseContainer, {\n          children: [/*#__PURE__*/_jsxDEV(DialogueHeader, {\n            children: [/*#__PURE__*/_jsxDEV(DialogueID, {\n              children: resp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: [\"Next: \", resp.next]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: [\"Condition:\", \" \", resp.conditionMet ? /*#__PURE__*/_jsxDEV(True, {\n                children: resp.condition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(False, {\n                children: resp.condition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DialogueParagraph, {\n            children: [\"\\\"[\", resp.category, \"] \", resp.dialogue, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c12 = CharacterBuilder;\nexport default CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"CharacterContainer\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"DialogueHeader\");\n$RefreshReg$(_c4, \"DialogueWrapper\");\n$RefreshReg$(_c5, \"ResponsesWrapper\");\n$RefreshReg$(_c6, \"ResponseContainer\");\n$RefreshReg$(_c7, \"True\");\n$RefreshReg$(_c8, \"False\");\n$RefreshReg$(_c9, \"DialogueParagraph\");\n$RefreshReg$(_c10, \"DialogueID\");\n$RefreshReg$(_c11, \"EditButton\");\n$RefreshReg$(_c12, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx"],"names":["React","useContext","styled","AppContext","CharacterContainer","div","CharacterName","h4","DialogueHeader","DialogueWrapper","ResponsesWrapper","ResponseContainer","True","span","False","DialogueParagraph","p","DialogueID","pre","EditButton","CharacterBuilder","character","state","getConditional","cID","conditions","find","condition","name","met","getResponses","dID","responses","filter","res","parent","map","resp","conditionMet","getDialogue","retrieved","dialogue","dia","console","log","displayName","default","next","category"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px 20px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CharacterName = styled.h4`\n  margin: 5px 0 0 0;\n`;\n\nconst DialogueHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgray;\n  margin-bottom: 10px;\n\n  pre {\n    display: flex;\n    flex-direction: row;\n    color: darkgray;\n    border-right: 1px solid darkgray;\n    padding: 10px;\n    margin: 0;\n\n    &:last-of-type {\n      border: none;\n    }\n  }\n`;\n\nconst DialogueWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  margin-top: 20px;\n`;\n\nconst ResponsesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 20px 0;\n`;\n\nconst ResponseContainer = styled.div`\n  margin-top: 10px;\n  border: 1px solid darkgray;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n\nconst True = styled.span`\n  color: green;\n`;\n\nconst False = styled.span`\n  color: red;\n`;\n\nconst DialogueParagraph = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\n\nconst DialogueID = styled.pre`\n  cursor: text;\n`;\n\nconst EditButton = styled.div`\n  cursor: pointer;\n`;\n\ninterface CharacterProps {\n  character: Character;\n}\n\nconst CharacterBuilder: React.FC<CharacterProps> = ({ character }) => {\n  const { state } = useContext(AppContext);\n\n  const getConditional = (cID: string) => {\n    return (\n      state.conditions.find((condition) => condition.name === cID) || {\n        name: \"NONE\",\n        met: true,\n      }\n    );\n  };\n\n  const getResponses = (dID: string) => {\n    const responses = state.responses.filter((res) => res.parent === dID);\n    return responses.map((resp) => ({\n      ...resp,\n      conditionMet: getConditional(resp.condition).met,\n    }));\n  };\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(\n      (dialogue) => dialogue.character === character.name\n    );\n    return retrieved.map((dia) => ({\n      ...dia,\n      responses: getResponses(dia.name),\n    }));\n  };\n\n  console.log(\"HMMM: \", getDialogue());\n\n  return (\n    <CharacterContainer>\n      <CharacterName>{character.displayName}</CharacterName>\n      {getDialogue().map((dialogue) => (\n        <DialogueWrapper>\n          <DialogueHeader>\n            <DialogueID>{dialogue.name}</DialogueID>\n            <pre>{dialogue.default && <True>DEFAULT</True>}</pre>\n            <EditButton>Edit</EditButton>\n          </DialogueHeader>\n          <DialogueParagraph>\"{dialogue.dialogue}\"</DialogueParagraph>\n          <ResponsesWrapper>\n            {dialogue.responses.map((resp) => (\n              <ResponseContainer>\n                <DialogueHeader>\n                  <DialogueID>{resp.name}</DialogueID>\n                  <pre>Next: {resp.next}</pre>\n                  <pre>\n                    Condition:{\" \"}\n                    {resp.conditionMet ? (\n                      <True>{resp.condition}</True>\n                    ) : (\n                      <False>{resp.condition}</False>\n                    )}\n                  </pre>\n                  <EditButton>Edit</EditButton>\n                </DialogueHeader>\n                <DialogueParagraph>\n                  \"[{resp.category}] {resp.dialogue}\"\n                </DialogueParagraph>\n              </ResponseContainer>\n            ))}\n          </ResponsesWrapper>\n        </DialogueWrapper>\n      ))}\n    </CharacterContainer>\n  );\n};\n\nexport default CharacterBuilder;\n"]},"metadata":{},"sourceType":"module"}