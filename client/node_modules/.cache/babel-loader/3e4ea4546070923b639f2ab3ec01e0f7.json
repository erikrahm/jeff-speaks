{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CharacterContainer;\nconst CharacterName = styled.h4`\n  margin: 5px 0 10px 0;\n`;\n_c2 = CharacterName;\n\nconst CharacterBuilder = ({\n  character\n}) => {\n  _s();\n\n  const {\n    state\n  } = useContext(AppContext);\n\n  const getConditional = cID => {\n    return state.conditions.find(condition => condition.name === cID) || {\n      name: \"NONE\",\n      met: true\n    };\n  };\n\n  const getResponses = dID => {\n    const responses = state.responses.filter(res => res.parent === dID);\n    return responses.map(resp => ({ ...resp,\n      conditionMet: getConditional(resp.condition).met\n    }));\n  };\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(dialogue => dialogue.character === character.name);\n    return retrieved.map(dia => ({ ...dia,\n      responses: getResponses(dia.name)\n    }));\n  };\n\n  console.log(\"HMMM: \", getDialogue());\n  return /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n      children: character.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), getDialogue().map(dialogue => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", dialogue.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Is Default: \", dialogue.default ? \"TRUE\" : \"FALSE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Dialogue: \", dialogue.dialogue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dialogue.responses.map(resp => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Name: \", resp.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Dialogue: \", resp.dialogue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Category: \", resp.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Next: \", resp.next]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: `Condition: ${resp.condition} (Met: ${resp.conditionMet})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c3 = CharacterBuilder;\nexport default CharacterBuilder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CharacterContainer\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/src/components/CharacterBuilder.tsx"],"names":["React","useContext","styled","AppContext","CharacterContainer","div","CharacterName","h4","CharacterBuilder","character","state","getConditional","cID","conditions","find","condition","name","met","getResponses","dID","responses","filter","res","parent","map","resp","conditionMet","getDialogue","retrieved","dialogue","dia","console","log","displayName","default","category","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,kB;AAQN,MAAME,aAAa,GAAGJ,MAAM,CAACK,EAAG;AAChC;AACA,CAFA;MAAMD,a;;AAQN,MAAME,gBAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAYT,UAAU,CAACE,UAAD,CAA5B;;AAEA,QAAMQ,cAAc,GAAIC,GAAD,IAAiB;AACtC,WACEF,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAuBC,SAAD,IAAeA,SAAS,CAACC,IAAV,KAAmBJ,GAAxD,KAAgE;AAC9DI,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,GAAG,EAAE;AAFyD,KADlE;AAMD,GAPD;;AASA,QAAMC,YAAY,GAAIC,GAAD,IAAiB;AACpC,UAAMC,SAAS,GAAGV,KAAK,CAACU,SAAN,CAAgBC,MAAhB,CAAwBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAeJ,GAA/C,CAAlB;AACA,WAAOC,SAAS,CAACI,GAAV,CAAeC,IAAD,KAAW,EAC9B,GAAGA,IAD2B;AAE9BC,MAAAA,YAAY,EAAEf,cAAc,CAACc,IAAI,CAACV,SAAN,CAAd,CAA+BE;AAFf,KAAX,CAAd,CAAP;AAID,GAND;;AAQA,QAAMU,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAGlB,KAAK,CAACmB,QAAN,CAAeR,MAAf,CACfQ,QAAD,IAAcA,QAAQ,CAACpB,SAAT,KAAuBA,SAAS,CAACO,IAD/B,CAAlB;AAGA,WAAOY,SAAS,CAACJ,GAAV,CAAeM,GAAD,KAAU,EAC7B,GAAGA,GAD0B;AAE7BV,MAAAA,SAAS,EAAEF,YAAY,CAACY,GAAG,CAACd,IAAL;AAFM,KAAV,CAAd,CAAP;AAID,GARD;;AAUAe,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,WAAW,EAAjC;AAEA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,aAAD;AAAA,gBAAgBlB,SAAS,CAACwB;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,WAAW,GAAGH,GAAd,CAAmBK,QAAD,iBACjB;AAAA,8BACE;AAAA,gCACE;AAAA,+BAAYA,QAAQ,CAACb,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qCAAkBa,QAAQ,CAACK,OAAT,GAAmB,MAAnB,GAA4B,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,iCAAgBL,QAAQ,CAACA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBACGA,QAAQ,CAACT,SAAT,CAAmBI,GAAnB,CAAwBC,IAAD,iBACtB;AAAA,kCACE;AAAA,iCAAYA,IAAI,CAACT,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,qCAAgBS,IAAI,CAACI,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,qCAAgBJ,IAAI,CAACU,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,iCAAYV,IAAI,CAACW,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBACI,cAAaX,IAAI,CAACV,SAAU,UAASU,IAAI,CAACC,YAAa;AAD3D;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA3DD;;GAAMlB,gB;;MAAAA,gB;AA6DN,eAAeA,gBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst CharacterContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CharacterName = styled.h4`\n  margin: 5px 0 10px 0;\n`;\n\ninterface CharacterProps {\n  character: Character;\n}\n\nconst CharacterBuilder: React.FC<CharacterProps> = ({ character }) => {\n  const { state } = useContext(AppContext);\n\n  const getConditional = (cID: string) => {\n    return (\n      state.conditions.find((condition) => condition.name === cID) || {\n        name: \"NONE\",\n        met: true,\n      }\n    );\n  };\n\n  const getResponses = (dID: string) => {\n    const responses = state.responses.filter((res) => res.parent === dID);\n    return responses.map((resp) => ({\n      ...resp,\n      conditionMet: getConditional(resp.condition).met,\n    }));\n  };\n\n  const getDialogue = () => {\n    const retrieved = state.dialogue.filter(\n      (dialogue) => dialogue.character === character.name\n    );\n    return retrieved.map((dia) => ({\n      ...dia,\n      responses: getResponses(dia.name),\n    }));\n  };\n\n  console.log(\"HMMM: \", getDialogue());\n\n  return (\n    <CharacterContainer>\n      <CharacterName>{character.displayName}</CharacterName>\n      {getDialogue().map((dialogue) => (\n        <div>\n          <div>\n            <div>Name: {dialogue.name}</div>\n            <div>Is Default: {dialogue.default ? \"TRUE\" : \"FALSE\"}</div>\n          </div>\n          <div>Dialogue: {dialogue.dialogue}</div>\n          <div>\n            {dialogue.responses.map((resp) => (\n              <div>\n                <div>Name: {resp.name}</div>\n                <div>Dialogue: {resp.dialogue}</div>\n                <div>Category: {resp.category}</div>\n                <div>Next: {resp.next}</div>\n                <div>\n                  {`Condition: ${resp.condition} (Met: ${resp.conditionMet})`}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </CharacterContainer>\n  );\n};\n\nexport default CharacterBuilder;\n"]},"metadata":{},"sourceType":"module"}