{"ast":null,"code":"var _jsxFileName = \"/Users/erik.rahm/dev/jeff-speaks/client/src/components/Sidebar.tsx\",\n    _s = $RefreshSig$();\n\nimport { map } from \"lodash\";\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../appState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n`;\n_c = SidebarContainer;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  pre {\n    font-size: 14px;\n    color: darkgray;\n    margin: 0;\n    padding: 0;\n\n    span {\n      cursor: hover;\n    }\n\n    &:hover {\n      color: steelblue;\n    }\n  }\n`;\n_c2 = OptionsContainer;\nconst SidebarHeader = styled.h4`\n  margin: 0;\n  padding: 0;\n  color: steelblue;\n`;\n_c3 = SidebarHeader;\nconst SidebarTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border-bottom: 1px solid darkgray;\n  color: steelblue;\n  margin: 10px 0;\n  padding-bottom: 5px;\n`;\n_c4 = SidebarTop;\nconst AddButton = styled.button`\n  background: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n`;\n_c5 = AddButton;\nconst CharacterLink = styled.a`\n  color: darkgray;\n\n  &:focus,\n  &:active {\n    color: blue;\n  }\n\n  &:hover {\n    color: steelblue;\n  }\n`;\n_c6 = CharacterLink;\n\nconst Sidebar = () => {\n  _s();\n\n  const [editing, updateEditing] = useState(\"\");\n  const [adding, updateAdding] = useState(false);\n  const [addingCharacter, updateAddingCharacter] = useState(false);\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n\n  const addCategory = () => {\n    updateAdding(true);\n  };\n\n  const confirmCharacter = () => {\n    const newCharacter = {\n      name: \"DEFAULT\",\n      displayName: \"NEW CHARACTER\",\n      default: \"DLG_STATUE1\"\n    };\n    const newDialogue = {\n      name: \"DLG_STATUE1\",\n      character: \"STATUE\",\n      dialogue: \"Hey here's a first bit of dialogue for your new Character to say!\",\n      default: true\n    };\n    dispatch({\n      type: \"addCharacter\",\n      payload: newCharacter\n    });\n    dispatch({\n      type: \"addDialogue\",\n      payload: newDialogue\n    });\n  };\n\n  const addCharacter = () => {\n    updateAddingCharacter(true);\n  };\n\n  const confirmAdd = event => {\n    const newCategory = event.currentTarget.value;\n    if (newCategory.length) dispatch({\n      type: \"addCategory\",\n      payload: newCategory\n    });\n    updateAdding(false);\n  };\n\n  const handleEnter = event => {\n    if (event.keyCode == 13) confirmAdd(event);\n  };\n\n  const updateCategory = event => {\n    if (event.currentTarget.innerText === editing) return;\n    dispatch({\n      type: \"editCategory\",\n      payload: event.currentTarget.innerText,\n      edit: editing\n    });\n    updateEditing(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarTop, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarHeader, {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        onClick: addCategory,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n      children: [adding && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onBlur: confirmAdd,\n        onKeyDown: handleEnter,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), state.categories.map(category => /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: editing === category ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onBlur: updateCategory,\n          role: \"textbox\",\n          contentEditable: true,\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onMouseDown: () => updateEditing(category),\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarTop, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarHeader, {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        onClick: addCharacter,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n      children: [addingCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onBlur: confirmAdd,\n          onKeyDown: handleEnter,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onBlur: confirmAdd,\n          onKeyDown: handleEnter,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), map(state.characters, character => /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(CharacterLink, {\n          href: `#${character.name}`,\n          children: character.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"eB/VMoSAd08Wi0DVXixPMkXqhfk=\");\n\n_c7 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SidebarContainer\");\n$RefreshReg$(_c2, \"OptionsContainer\");\n$RefreshReg$(_c3, \"SidebarHeader\");\n$RefreshReg$(_c4, \"SidebarTop\");\n$RefreshReg$(_c5, \"AddButton\");\n$RefreshReg$(_c6, \"CharacterLink\");\n$RefreshReg$(_c7, \"Sidebar\");","map":{"version":3,"sources":["/Users/erik.rahm/dev/jeff-speaks/client/src/components/Sidebar.tsx"],"names":["map","React","useContext","useState","styled","AppContext","SidebarContainer","div","OptionsContainer","SidebarHeader","h4","SidebarTop","AddButton","button","CharacterLink","a","Sidebar","editing","updateEditing","adding","updateAdding","addingCharacter","updateAddingCharacter","state","dispatch","addCategory","confirmCharacter","newCharacter","name","displayName","default","newDialogue","character","dialogue","type","payload","addCharacter","confirmAdd","event","newCategory","currentTarget","value","length","handleEnter","keyCode","updateCategory","innerText","edit","categories","category","characters"],"mappings":"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","sourcesContent":["import { map } from \"lodash\";\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../appState\";\n\nconst SidebarContainer = styled.div`\n  background: #f1f1f1;\n  padding: 10px 15px;\n  border-radius: 8px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  pre {\n    font-size: 14px;\n    color: darkgray;\n    margin: 0;\n    padding: 0;\n\n    span {\n      cursor: hover;\n    }\n\n    &:hover {\n      color: steelblue;\n    }\n  }\n`;\n\nconst SidebarHeader = styled.h4`\n  margin: 0;\n  padding: 0;\n  color: steelblue;\n`;\n\nconst SidebarTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border-bottom: 1px solid darkgray;\n  color: steelblue;\n  margin: 10px 0;\n  padding-bottom: 5px;\n`;\n\nconst AddButton = styled.button`\n  background: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n`;\n\nconst CharacterLink = styled.a`\n  color: darkgray;\n\n  &:focus,\n  &:active {\n    color: blue;\n  }\n\n  &:hover {\n    color: steelblue;\n  }\n`;\n\nconst Sidebar: React.FC = () => {\n  const [editing, updateEditing] = useState(\"\");\n  const [adding, updateAdding] = useState(false);\n  const [addingCharacter, updateAddingCharacter] = useState(false);\n  const { state, dispatch } = useContext(AppContext);\n\n  const addCategory = () => {\n    updateAdding(true);\n  };\n\n  const confirmCharacter = () => {\n    const newCharacter = {\n      name: \"DEFAULT\",\n      displayName: \"NEW CHARACTER\",\n      default: \"DLG_STATUE1\",\n    };\n\n    const newDialogue = {\n      name: \"DLG_STATUE1\",\n      character: \"STATUE\",\n      dialogue:\n        \"Hey here's a first bit of dialogue for your new Character to say!\",\n      default: true,\n    };\n    dispatch({ type: \"addCharacter\", payload: newCharacter });\n    dispatch({ type: \"addDialogue\", payload: newDialogue });\n  };\n\n  const addCharacter = () => {\n    updateAddingCharacter(true);\n  };\n\n  const confirmAdd = (event: any) => {\n    const newCategory = event.currentTarget.value;\n    if (newCategory.length)\n      dispatch({ type: \"addCategory\", payload: newCategory });\n    updateAdding(false);\n  };\n\n  const handleEnter = (event: any) => {\n    if (event.keyCode == 13) confirmAdd(event);\n  };\n\n  const updateCategory = (event: any) => {\n    if (event.currentTarget.innerText === editing) return;\n    dispatch({\n      type: \"editCategory\",\n      payload: event.currentTarget.innerText,\n      edit: editing,\n    });\n    updateEditing(\"\");\n  };\n\n  return (\n    <SidebarContainer>\n      <SidebarTop>\n        <SidebarHeader>Categories</SidebarHeader>\n        <AddButton onClick={addCategory}>+</AddButton>\n      </SidebarTop>\n      <OptionsContainer>\n        {adding && (\n          <input\n            type=\"text\"\n            onBlur={confirmAdd}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        )}\n        {state.categories.map((category) => (\n          <pre>\n            {editing === category ? (\n              <span onBlur={updateCategory} role=\"textbox\" contentEditable>\n                {category}\n              </span>\n            ) : (\n              <span onMouseDown={() => updateEditing(category)}>\n                {category}\n              </span>\n            )}\n          </pre>\n        ))}\n      </OptionsContainer>\n      <SidebarTop>\n        <SidebarHeader>Characters</SidebarHeader>\n        <AddButton onClick={addCharacter}>+</AddButton>\n      </SidebarTop>\n      <OptionsContainer>\n        {addingCharacter && (\n          <div>\n            <input\n              type=\"text\"\n              onBlur={confirmAdd}\n              onKeyDown={handleEnter}\n              autoFocus\n            />\n            <input\n              type=\"text\"\n              onBlur={confirmAdd}\n              onKeyDown={handleEnter}\n              autoFocus\n            />\n          </div>\n        )}\n        {map(state.characters, (character) => (\n          <pre>\n            <CharacterLink href={`#${character.name}`}>\n              {character.displayName}\n            </CharacterLink>\n          </pre>\n        ))}\n      </OptionsContainer>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}